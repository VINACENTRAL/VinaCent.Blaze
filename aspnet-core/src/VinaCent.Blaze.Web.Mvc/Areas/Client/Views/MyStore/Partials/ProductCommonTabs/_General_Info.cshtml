@using VinaCent.Blaze.BusinessCore
@using VinaCent.Blaze.BusinessCore.CurrencyUnits.Dto
@model VinaCent.Blaze.BusinessCore.ShopModule.Products.Dto.CreateOrUpdateProductDto
@{
    var currencyUnit = (CurrencyUnitDto)ViewBag.DefaultCurrencyUnit;
    var pattern = CurrencyUnit.CurrencyPositivePatterns[currencyUnit.CurrencyPositivePattern];
}
<div class="row">
    <div class="col-md-6">
        <div class="mb-3">
            <label class="form-label" asp-for="Price"></label>
            <div class="input-group has-validation mb-3">
                @if (pattern.StartsWith('$'))
                {
                    <span class="input-group-text">@currencyUnit.CurrencySymbol</span>
                }
                <input type="text" class="form-control" asp-for="Price">
                @if (pattern.EndsWith('$'))
                {
                    <span class="input-group-text">@currencyUnit.CurrencySymbol</span>
                }
            </div>
            <span asp-validation-for="Price" class="invalid-feedback"></span>
        </div>
    </div>
    <div class="col-md-6">
        <div class="mb-3">
            <label class="form-label" asp-for="Discount"></label>
            <div class="input-group mb-3">
                @if (pattern.StartsWith('$'))
                {
                    <span class="input-group-text">@currencyUnit.CurrencySymbol</span>
                }
                <input type="text" class="form-control" asp-for="Discount">
                @if (pattern.EndsWith('$'))
                {
                    <span class="input-group-text">@currencyUnit.CurrencySymbol</span>
                }
            </div>
            <span asp-validation-for="Discount" class="invalid-feedback"></span>
        </div>
    </div>
</div>