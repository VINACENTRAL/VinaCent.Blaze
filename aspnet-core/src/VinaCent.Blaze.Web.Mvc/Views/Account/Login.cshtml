@using Abp.Authorization.Users
@using Abp.Configuration.Startup
@using Newtonsoft.Json
@using VinaCent.Blaze.Sessions.Dto
@inject IMultiTenancyConfig MultiTenancyConfig

@model VinaCent.Blaze.Web.Models.Account.LoginFormViewModel
@{
    ViewBag.Title = L(LKConstants.LogIn);

    var isLockout = !string.IsNullOrEmpty(Model.UsernameOrEmailAddress);
    var userLoginInfo = (UserLoginInfoDto)ViewBag.UserLoginInfo;
}

@section scripts
{
    @await Html.PartialAsync("~/Views/Shared/Components/TenantChange/_ModalContainer.cshtml")
    <script src="~/view-resources/Views/Account/Login.js" asp-append-version="true"></script>
}

<div class="card mt-4">
    @if (MultiTenancyConfig.IsEnabled)
    {
        <div class="card-header">
            <vc:tenant-change></vc:tenant-change>
        </div>
    }
    <div class="card-body p-4">
        <div class="p-2">
            <div class="text-center mt-2">
                <h4 class="text-primary">@L(isLockout?LKConstants.LockScreen: LKConstants.LogIn)</h4>
                <p class="text-muted">
                    @L(isLockout?LKConstants.LockScreenMessage:LKConstants.LoginScreenMessage)
                </p>
            </div>

            @if (!isLockout)
            {
                <div class="p-2 mt-4">
                    <form id="LoginForm" asp-action="Login" method="post">
                        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                        <input type="hidden" name="returnUrlHash" />

                        <div class="mb-3">
                            <label for="username" class="form-label">@L(LKConstants.UserNameOrEmail)</label>
                            <input type="text" name="usernameOrEmailAddress" class="form-control"
                               placeholder="@L(LKConstants.UserNameOrEmail)" required autofocus
                               maxlength="@AbpUserBase.MaxEmailAddressLength">
                        </div>

                        <div class="mb-3">
                            <div class="float-end">
                                <a asp-action="ResetPassword" class="text-muted">@L(LKConstants.ForgotPassword)</a>
                            </div>
                            <label class="form-label" for="password-input">@L(LKConstants.Password)</label>
                            <div class="position-relative auth-pass-inputgroup mb-3">
                                <input type="password" class="form-control pe-5" name="Password" autocomplete="password"
                                   placeholder="@L(LKConstants.Password)" required
                                   maxlength="@AbpUserBase.MaxPlainPasswordLength" id="password-input">
                                <button class="btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted shadow-none"
                                    type="button" id="password-addon">
                                    <i class="ri-eye-fill align-middle"></i>
                                </button>
                            </div>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="RememberMe" name="RememberMe" value="true"
                               checked>
                            <label class="form-check-label" for="RememberMe">@L(LKConstants.RememberMe)</label>
                        </div>

                        <div class="mt-4">
                            <button class="btn btn-success w-100" type="submit"
                                id="LoginButton">
                                @L(LKConstants.LogIn)
                            </button>
                        </div>


                        <div class="mt-4 text-center">
                            <div class="signin-other-title">
                                <h5 class="fs-13 mb-4 title">@L(LKConstants.SignInWith)</h5>
                            </div>
                            <div>
                                <button type="button" class="btn btn-primary btn-icon waves-effect waves-light">
                                    <i class="ri-facebook-fill fs-16"></i>
                                </button>
                                <button type="button" class="btn btn-danger btn-icon waves-effect waves-light">
                                    <i class="ri-google-fill fs-16"></i>
                                </button>
                                <button type="button" class="btn btn-dark btn-icon waves-effect waves-light">
                                    <i class="ri-github-fill fs-16"></i>
                                </button>
                                <button type="button" class="btn btn-info btn-icon waves-effect waves-light">
                                    <i class="ri-twitter-fill fs-16"></i>
                                </button>
                            </div>
                        </div>

                    </form>
                </div>
            }
            else
            {
                <div class="user-thumb text-center">
                    <img src="@userLoginInfo.Avatar" class="rounded-circle img-thumbnail avatar-lg shadow" alt="thumbnail" avatar/>
                    <h5 class="font-size-15 mt-3">@userLoginInfo.FullName</h5>
                </div>
                <div class="p-2 mt-4">
                    <form id="LoginForm" asp-action="Login" method="post">
                        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                        <input type="hidden" name="returnUrlHash" />
                        <input type="hidden" name="usernameOrEmailAddress" value="@Model.UsernameOrEmailAddress" />

                        <div class="mb-3">
                            <div class="float-end">
                                <a asp-action="ResetPassword" class="text-muted">@L(LKConstants.ForgotPassword)</a>
                            </div>
                            <label class="form-label" for="password-input">@L(LKConstants.Password)</label>
                            <div class="position-relative auth-pass-inputgroup mb-3">
                                <input type="password" class="form-control pe-5" name="Password" autocomplete="password"
                                   placeholder="@L(LKConstants.Password)" required
                                   maxlength="@AbpUserBase.MaxPlainPasswordLength" id="password-input">
                                <button class="btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted shadow-none"
                                    type="button" id="password-addon">
                                    <i class="ri-eye-fill align-middle"></i>
                                </button>
                            </div>
                        </div>

                        <div class="mb-2 mt-4">
                            <button class="btn btn-success w-100" type="submit" id="LoginButton">@L(LKConstants.Unlock)</button>
                        </div>
                    </form>
                </div>
            }
        </div>
    </div>
    <vc:velzon-account-language />
</div>
@if (!isLockout)
{
    if (Model.IsSelfRegistrationAllowed)
    {
        <div class="mt-4 text-center">
            <p class="mb-0">
                @L(LKConstants.DontHaveAnAccount) <a asp-action="Register" class="fw-semibold text-primary text-decoration-underline"> @L(LKConstants.Register)</a>
            </p>
        </div>
    }
}
else
{
    var url = Url.Action("LockoutChangeAccount", "Account");
    if (Context.Request.QueryString.HasValue)
    {
        url += Context.Request.QueryString.Value;
    }
    <div class="mt-4 text-center">
        <p class="mb-0">
            @L(LKConstants.NotYou) <a href="@url" class="fw-semibold text-primary text-decoration-underline"> @L(LKConstants.LogIn) </a>
        </p>
    </div>
}