@using VinaCent.Blaze.Web.Views
@using VinaCent.Blaze.Web.Views.Shared.Components.VelzonAside
@using Abp.Application.Navigation
@model Abp.Application.Navigation.UserMenuItem
@inject ILanguageManager LanguageManager
@{
    var isActive = IsActiveMenuItem(Model, ViewBag.CurrentPageName);
    var subMenus = Model.Items.Where(x => x.IsVisible).OrderByCustom().ToList();
    var hasSubMenus = subMenus.Any();
}

@functions {

    static bool IsActiveMenuItem(UserMenuItem menuItem, string pageName)
    {
        if (string.IsNullOrWhiteSpace(pageName))
            return false;

        return pageName.Equals(menuItem.Name, StringComparison.InvariantCultureIgnoreCase)
               || menuItem.Items.Any(cn => IsActiveMenuItem(cn, pageName));
    }

    string CalculateMenuUrl(string url)
    {
        if (string.IsNullOrEmpty(url))
            return ApplicationPath;

        if (UrlChecker.IsRooted(url))
            return url;

        return ApplicationPath + url;
    }

}

@if (!hasSubMenus)
{
    var linkUrl = CalculateMenuUrl(Model.Url);
    var linkClasses = $"nav-link {(isActive ? "active" : null)}";
    var linkTarget = !string.IsNullOrEmpty(Model.Target) ? Html.Raw($" target=\"{Model.Target}\"") : null;

    <li class="nav-item">
        <a href="@linkUrl" class="@linkClasses" @linkTarget>
            @if (!string.IsNullOrEmpty(Model.Icon))
            {
                <i class="@Url.Content(Model.Icon)"></i> <span>@Model.DisplayName</span>
            }
            else
            {
                <span>@Model.DisplayName</span>
            }
        </a>
    </li>
}
else
{
    var navitemClasses = $"nav-item {(hasSubMenus ? "has-treeview" : "")} {(isActive ? "menu-open" : "")}";
    navitemClasses = !string.IsNullOrEmpty(navitemClasses?.Trim()) ? navitemClasses : null;
    var linkClasses = $"nav-link {(isActive ? "active" : null)}";

    <li class="@navitemClasses">
        <a href="#" class="@linkClasses" data-bs-toggle="collapse" role="button" aria-expanded="false">
            @if (!string.IsNullOrEmpty(Model.Icon))
            {
                <i class="@Url.Content(Model.Icon)"></i> <span>@Model.DisplayName</span>
            }
            else
            {
                <span>@Model.DisplayName</span>
                if (LanguageManager.CurrentLanguage.IsRightToLeft)
                {
                    <i class="fas fa-angle-right right"></i>
                }
                else
                {
                    <i class="fas fa-angle-left right"></i>
                }
            }
        </a>
        @if (hasSubMenus)
        {
            <div class="collapse menu-dropdown">
                <ul class="nav nav-sm flex-column">
                    @foreach (var subMenu in subMenus)
                    {
                        @await Html.PartialAsync("Components/VelzonAside/_MenuItem", subMenu)
                    }
                </ul>
            </div>
        }
    </li>
}